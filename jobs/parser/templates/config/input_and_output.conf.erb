input {

<% if p('logstash_parser.inputs', nil) %>
  <% p('logstash_parser.inputs').each do |input| %>
    <%= input['plugin'] %> {
    <% input['options'].each do |k, v| %>
      <%= k %> => <%= v.inspect %>
    <% end %>
    }
  <% end %>
<% else # no custom input defined, default to redis %>
  <% p('redis.hosts').each do |host| %>
    redis {
      host => "<%= host %>"
      port => <%= p('redis.port') %>
      type => "redis-input"
      data_type => "list"
      key => "<%= p('redis.key') %>"
      threads => 8
    }
  <% end %>
<% end %>

}

output {
    <% if p("logstash_parser.debug") %>
        stdout {
            codec => "json"
        }
    <% end %>

    elasticsearch {
        hosts => [<%= p("logstash.output.elasticsearch.data_hosts").map { |ip| "\"#{ip}:9200\"" }.join(',') %>]
        flush_size => <%= p("logstash.output.elasticsearch.flush_size") %>
        <% if p('logstash_parser.idle_flush_time', nil) %>
            idle_flush_time => <%= p('logstash_parser.idle_flush_time') %>
        <% end %>
        <% if p('logstash_parser.elasticsearch_document_id', nil) %>
            document_id => "<%= p('logstash_parser.elasticsearch_document_id') %>"
        <% end %>
        index => "<%= p('logstash_parser.elasticsearch_index') %>"
        document_type => "<%= p('logstash_parser.elasticsearch_index_type') %>"
        manage_template => false
        <% if p('logstash_parser.elasticsearch_routing', nil) %>
            routing =>  "<%= p('logstash_parser.elasticsearch_routing') %>"
        <% end %>
    }

    <%= p('logstash_parser.outputs', '')  %>
}
